{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mehme\\\\OneDrive\\\\Masa\\xFCst\\xFC\\\\SWESYS\\\\frontend\\\\src\\\\components\\\\Schedules.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { getSchedules } from \"../api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Schedules = ({\n  token\n}) => {\n  _s();\n  const [schedules, setSchedules] = useState([]);\n  useEffect(() => {\n    const fetchSchedules = async () => {\n      try {\n        const data = await getSchedules(token);\n        setSchedules(data);\n      } catch (error) {\n        console.error(\"Error fetching schedules:\", error);\n      }\n    };\n    fetchSchedules();\n  }, [token]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Schedules\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: schedules.map(schedule => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [schedule.day, \" - \", schedule.time_range]\n      }, schedule.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n};\n_s(Schedules, \"+ONLF2JzkB4QBHXWn6bXeilsnFA=\");\n_c = Schedules;\nexport default Schedules;\nvar _c;\n$RefreshReg$(_c, \"Schedules\");","map":{"version":3,"names":["React","useEffect","useState","getSchedules","jsxDEV","_jsxDEV","Schedules","token","_s","schedules","setSchedules","fetchSchedules","data","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","map","schedule","day","time_range","id","_c","$RefreshReg$"],"sources":["C:/Users/mehme/OneDrive/Masaüstü/SWESYS/frontend/src/components/Schedules.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { getSchedules } from \"../api\";\r\n\r\nconst Schedules = ({ token }) => {\r\n  const [schedules, setSchedules] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchSchedules = async () => {\r\n      try {\r\n        const data = await getSchedules(token);\r\n        setSchedules(data);\r\n      } catch (error) {\r\n        console.error(\"Error fetching schedules:\", error);\r\n      }\r\n    };\r\n    fetchSchedules();\r\n  }, [token]);\r\n\r\n  return (\r\n    <div>\r\n      <h2>Schedules</h2>\r\n      <ul>\r\n        {schedules.map((schedule) => (\r\n          <li key={schedule.id}>\r\n            {schedule.day} - {schedule.time_range}\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Schedules;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,YAAY,QAAQ,QAAQ;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtC,MAAMC,SAAS,GAAGA,CAAC;EAAEC;AAAM,CAAC,KAAK;EAAAC,EAAA;EAC/B,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAE9CD,SAAS,CAAC,MAAM;IACd,MAAMU,cAAc,GAAG,MAAAA,CAAA,KAAY;MACjC,IAAI;QACF,MAAMC,IAAI,GAAG,MAAMT,YAAY,CAACI,KAAK,CAAC;QACtCG,YAAY,CAACE,IAAI,CAAC;MACpB,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;MACnD;IACF,CAAC;IACDF,cAAc,CAAC,CAAC;EAClB,CAAC,EAAE,CAACJ,KAAK,CAAC,CAAC;EAEX,oBACEF,OAAA;IAAAU,QAAA,gBACEV,OAAA;MAAAU,QAAA,EAAI;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAClBd,OAAA;MAAAU,QAAA,EACGN,SAAS,CAACW,GAAG,CAAEC,QAAQ,iBACtBhB,OAAA;QAAAU,QAAA,GACGM,QAAQ,CAACC,GAAG,EAAC,KAAG,EAACD,QAAQ,CAACE,UAAU;MAAA,GAD9BF,QAAQ,CAACG,EAAE;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEhB,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV,CAAC;AAACX,EAAA,CA3BIF,SAAS;AAAAmB,EAAA,GAATnB,SAAS;AA6Bf,eAAeA,SAAS;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}