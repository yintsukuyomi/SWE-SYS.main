{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mehme\\\\OneDrive\\\\Masa\\xFCst\\xFC\\\\SWESYS\\\\frontend\\\\src\\\\index.js\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport App from \"./App\";\nimport \"./index.css\";\n\n// Get theme preference or use system preference when set to \"system\"\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction getThemePreference() {\n  const savedTheme = localStorage.getItem('theme') || 'light';\n  if (savedTheme === 'system') {\n    // Check system preference\n    const prefersDark = window.matchMedia('(prefers-color-scheme: dark)').matches;\n    return prefersDark ? 'dark' : 'light';\n  }\n  return savedTheme;\n}\n\n// Apply theme settings on page load\ndocument.documentElement.setAttribute('data-theme', getThemePreference());\n\n// Listen for system theme changes when using system preference\nif (localStorage.getItem('theme') === 'system') {\n  const prefersDarkScheme = window.matchMedia('(prefers-color-scheme: dark)');\n  const handleSystemThemeChange = e => {\n    const newTheme = e.matches ? 'dark' : 'light';\n    document.documentElement.setAttribute('data-theme', newTheme);\n  };\n  prefersDarkScheme.addEventListener('change', handleSystemThemeChange);\n}\n\n// Add event listener for theme changes\ndocument.addEventListener('DOMContentLoaded', () => {\n  // This can be used for any additional initialization that needs to happen after DOM is loaded\n  console.log('DOM fully loaded and parsed');\n});\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render(/*#__PURE__*/_jsxDEV(React.StrictMode, {\n  children: /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 42,\n  columnNumber: 3\n}, this));","map":{"version":3,"names":["React","ReactDOM","App","jsxDEV","_jsxDEV","getThemePreference","savedTheme","localStorage","getItem","prefersDark","window","matchMedia","matches","document","documentElement","setAttribute","prefersDarkScheme","handleSystemThemeChange","e","newTheme","addEventListener","console","log","root","createRoot","getElementById","render","StrictMode","children","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["C:/Users/mehme/OneDrive/Masaüstü/SWESYS/frontend/src/index.js"],"sourcesContent":["import React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport App from \"./App\";\nimport \"./index.css\";\n\n// Get theme preference or use system preference when set to \"system\"\nfunction getThemePreference() {\n  const savedTheme = localStorage.getItem('theme') || 'light';\n  \n  if (savedTheme === 'system') {\n    // Check system preference\n    const prefersDark = window.matchMedia('(prefers-color-scheme: dark)').matches;\n    return prefersDark ? 'dark' : 'light';\n  }\n  \n  return savedTheme;\n}\n\n// Apply theme settings on page load\ndocument.documentElement.setAttribute('data-theme', getThemePreference());\n\n// Listen for system theme changes when using system preference\nif (localStorage.getItem('theme') === 'system') {\n  const prefersDarkScheme = window.matchMedia('(prefers-color-scheme: dark)');\n  \n  const handleSystemThemeChange = (e) => {\n    const newTheme = e.matches ? 'dark' : 'light';\n    document.documentElement.setAttribute('data-theme', newTheme);\n  };\n  \n  prefersDarkScheme.addEventListener('change', handleSystemThemeChange);\n}\n\n// Add event listener for theme changes\ndocument.addEventListener('DOMContentLoaded', () => {\n  // This can be used for any additional initialization that needs to happen after DOM is loaded\n  console.log('DOM fully loaded and parsed');\n});\n\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,QAAQ,MAAM,kBAAkB;AACvC,OAAOC,GAAG,MAAM,OAAO;AACvB,OAAO,aAAa;;AAEpB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,SAASC,kBAAkBA,CAAA,EAAG;EAC5B,MAAMC,UAAU,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,IAAI,OAAO;EAE3D,IAAIF,UAAU,KAAK,QAAQ,EAAE;IAC3B;IACA,MAAMG,WAAW,GAAGC,MAAM,CAACC,UAAU,CAAC,8BAA8B,CAAC,CAACC,OAAO;IAC7E,OAAOH,WAAW,GAAG,MAAM,GAAG,OAAO;EACvC;EAEA,OAAOH,UAAU;AACnB;;AAEA;AACAO,QAAQ,CAACC,eAAe,CAACC,YAAY,CAAC,YAAY,EAAEV,kBAAkB,CAAC,CAAC,CAAC;;AAEzE;AACA,IAAIE,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,KAAK,QAAQ,EAAE;EAC9C,MAAMQ,iBAAiB,GAAGN,MAAM,CAACC,UAAU,CAAC,8BAA8B,CAAC;EAE3E,MAAMM,uBAAuB,GAAIC,CAAC,IAAK;IACrC,MAAMC,QAAQ,GAAGD,CAAC,CAACN,OAAO,GAAG,MAAM,GAAG,OAAO;IAC7CC,QAAQ,CAACC,eAAe,CAACC,YAAY,CAAC,YAAY,EAAEI,QAAQ,CAAC;EAC/D,CAAC;EAEDH,iBAAiB,CAACI,gBAAgB,CAAC,QAAQ,EAAEH,uBAAuB,CAAC;AACvE;;AAEA;AACAJ,QAAQ,CAACO,gBAAgB,CAAC,kBAAkB,EAAE,MAAM;EAClD;EACAC,OAAO,CAACC,GAAG,CAAC,6BAA6B,CAAC;AAC5C,CAAC,CAAC;AAEF,MAAMC,IAAI,GAAGtB,QAAQ,CAACuB,UAAU,CAACX,QAAQ,CAACY,cAAc,CAAC,MAAM,CAAC,CAAC;AACjEF,IAAI,CAACG,MAAM,cACTtB,OAAA,CAACJ,KAAK,CAAC2B,UAAU;EAAAC,QAAA,eACfxB,OAAA,CAACF,GAAG;IAAA2B,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE;AAAC;EAAAH,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,OACS,CACpB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}