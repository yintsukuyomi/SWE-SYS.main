{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mehme\\\\OneDrive\\\\Masa\\xFCst\\xFC\\\\SWESYS\\\\frontend\\\\src\\\\contexts\\\\LanguageContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState, useContext, useEffect } from 'react';\nimport trTranslations from '../translations/tr';\n\n// Dil context'ini oluştur\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LanguageContext = /*#__PURE__*/createContext();\nexport const LanguageProvider = ({\n  children\n}) => {\n  _s();\n  const [language] = useState('tr'); // Şimdilik sadece Türkçe destekleniyor\n  const [translations] = useState(trTranslations);\n\n  // t fonksiyonu, çeviri anahtarını ve isteğe bağlı parametreleri alır\n  const t = (key, params = {}) => {\n    if (!translations[key]) {\n      console.warn(`Translation key not found: ${key}`);\n      return key;\n    }\n    let translated = translations[key];\n\n    // Parametreleri çeviri metinlerinde kullan\n    Object.entries(params).forEach(([paramKey, paramValue]) => {\n      translated = translated.replace(`{${paramKey}}`, paramValue);\n    });\n    return translated;\n  };\n  return /*#__PURE__*/_jsxDEV(LanguageContext.Provider, {\n    value: {\n      language,\n      t\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n\n// useTranslation hook'u\n_s(LanguageProvider, \"vRKmpn4ytfDw2BD8r+rLSLJUrJw=\");\n_c = LanguageProvider;\nexport const useTranslation = () => {\n  _s2();\n  const context = useContext(LanguageContext);\n  if (context === undefined) {\n    throw new Error('useTranslation must be used within a LanguageProvider');\n  }\n  return context;\n};\n_s2(useTranslation, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"LanguageProvider\");","map":{"version":3,"names":["React","createContext","useState","useContext","useEffect","trTranslations","jsxDEV","_jsxDEV","LanguageContext","LanguageProvider","children","_s","language","translations","t","key","params","console","warn","translated","Object","entries","forEach","paramKey","paramValue","replace","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useTranslation","_s2","context","undefined","Error","$RefreshReg$"],"sources":["C:/Users/mehme/OneDrive/Masaüstü/SWESYS/frontend/src/contexts/LanguageContext.js"],"sourcesContent":["import React, { createContext, useState, useContext, useEffect } from 'react';\r\nimport trTranslations from '../translations/tr';\r\n\r\n// Dil context'ini oluştur\r\nconst LanguageContext = createContext();\r\n\r\nexport const LanguageProvider = ({ children }) => {\r\n  const [language] = useState('tr'); // Şimdilik sadece Türkçe destekleniyor\r\n  const [translations] = useState(trTranslations);\r\n\r\n  // t fonksiyonu, çeviri anahtarını ve isteğe bağlı parametreleri alır\r\n  const t = (key, params = {}) => {\r\n    if (!translations[key]) {\r\n      console.warn(`Translation key not found: ${key}`);\r\n      return key;\r\n    }\r\n\r\n    let translated = translations[key];\r\n    \r\n    // Parametreleri çeviri metinlerinde kullan\r\n    Object.entries(params).forEach(([paramKey, paramValue]) => {\r\n      translated = translated.replace(`{${paramKey}}`, paramValue);\r\n    });\r\n    \r\n    return translated;\r\n  };\r\n\r\n  return (\r\n    <LanguageContext.Provider value={{ language, t }}>\r\n      {children}\r\n    </LanguageContext.Provider>\r\n  );\r\n};\r\n\r\n// useTranslation hook'u\r\nexport const useTranslation = () => {\r\n  const context = useContext(LanguageContext);\r\n  if (context === undefined) {\r\n    throw new Error('useTranslation must be used within a LanguageProvider');\r\n  }\r\n  return context;\r\n};\r\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,UAAU,EAAEC,SAAS,QAAQ,OAAO;AAC7E,OAAOC,cAAc,MAAM,oBAAoB;;AAE/C;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,eAAe,gBAAGP,aAAa,CAAC,CAAC;AAEvC,OAAO,MAAMQ,gBAAgB,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAChD,MAAM,CAACC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;EACnC,MAAM,CAACW,YAAY,CAAC,GAAGX,QAAQ,CAACG,cAAc,CAAC;;EAE/C;EACA,MAAMS,CAAC,GAAGA,CAACC,GAAG,EAAEC,MAAM,GAAG,CAAC,CAAC,KAAK;IAC9B,IAAI,CAACH,YAAY,CAACE,GAAG,CAAC,EAAE;MACtBE,OAAO,CAACC,IAAI,CAAC,8BAA8BH,GAAG,EAAE,CAAC;MACjD,OAAOA,GAAG;IACZ;IAEA,IAAII,UAAU,GAAGN,YAAY,CAACE,GAAG,CAAC;;IAElC;IACAK,MAAM,CAACC,OAAO,CAACL,MAAM,CAAC,CAACM,OAAO,CAAC,CAAC,CAACC,QAAQ,EAAEC,UAAU,CAAC,KAAK;MACzDL,UAAU,GAAGA,UAAU,CAACM,OAAO,CAAC,IAAIF,QAAQ,GAAG,EAAEC,UAAU,CAAC;IAC9D,CAAC,CAAC;IAEF,OAAOL,UAAU;EACnB,CAAC;EAED,oBACEZ,OAAA,CAACC,eAAe,CAACkB,QAAQ;IAACC,KAAK,EAAE;MAAEf,QAAQ;MAAEE;IAAE,CAAE;IAAAJ,QAAA,EAC9CA;EAAQ;IAAAkB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACe,CAAC;AAE/B,CAAC;;AAED;AAAApB,EAAA,CA5BaF,gBAAgB;AAAAuB,EAAA,GAAhBvB,gBAAgB;AA6B7B,OAAO,MAAMwB,cAAc,GAAGA,CAAA,KAAM;EAAAC,GAAA;EAClC,MAAMC,OAAO,GAAGhC,UAAU,CAACK,eAAe,CAAC;EAC3C,IAAI2B,OAAO,KAAKC,SAAS,EAAE;IACzB,MAAM,IAAIC,KAAK,CAAC,uDAAuD,CAAC;EAC1E;EACA,OAAOF,OAAO;AAChB,CAAC;AAACD,GAAA,CANWD,cAAc;AAAA,IAAAD,EAAA;AAAAM,YAAA,CAAAN,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}